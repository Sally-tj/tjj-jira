//grid和flex各自的应用场景
//1.一维布局用flex,二维布局用grid
//2.从内容出发（用flex）：有一组内容（数量不固定），希望均匀分布在容器中，由内容自己的大小决定占据的空间大小；
//  从布局出发(用grid)： 先规划网格（数量固定），然后把元素往里填充

.authenticated-wrapper {
  display: grid;//本容器要用grid来布局
  grid-template-rows: 6rem 1fr;//从上到下每一行的高度（1fr代表总高度减去两个6rem）
  grid-template-areas: //相应元素的排列方式
  "header  "
  " main "
  ;
  grid-gap: 1rem;//每一块的间隔大小
  height: 100vh;
  .authenticated-header {
    grid-area: header;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    .header-left{
        display: flex;
        align-items: center;
    }
  }
  .authenticated-main {
    grid-area: main;
  }
}
